# Generated by Django 2.2.8 on 2020-01-13 19:42

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CasosFormacion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('alcohol', models.IntegerField(blank=True, null=True)),
                ('blobrecs', models.TextField(blank=True, db_column='blobRecs', null=True)),
                ('cetoacidosis', models.IntegerField(blank=True, db_column='Cetoacidosis', null=True)),
                ('cetonicos', models.IntegerField(blank=True, null=True)),
                ('conocimientos_infor', models.IntegerField(blank=True, null=True)),
                ('control_alimentacion', models.IntegerField(blank=True, null=True)),
                ('edad', models.IntegerField(blank=True, null=True)),
                ('frecuencia_deporte', models.IntegerField(blank=True, null=True)),
                ('glicosilada', models.IntegerField(blank=True, null=True)),
                ('glucemia_postdeporte', models.IntegerField(blank=True, null=True)),
                ('hiperglucemia', models.IntegerField(blank=True, null=True)),
                ('hipoglucemia', models.IntegerField(blank=True, null=True)),
                ('indice_glucemico', models.IntegerField(blank=True, null=True)),
                ('intensidad_deporte', models.IntegerField(blank=True, null=True)),
                ('moodle', models.IntegerField(blank=True, null=True)),
                ('perfiles', models.IntegerField(blank=True, null=True)),
                ('practica_deporte', models.IntegerField(blank=True, null=True)),
                ('sense', models.IntegerField(blank=True, null=True)),
                ('situaciones_tensas', models.IntegerField(blank=True, null=True)),
                ('tomas_extras', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'casos_formacion',
            },
        ),
        migrations.CreateModel(
            name='CasosSeguimiento',
            fields=[
                ('caseid', models.AutoField(db_column='caseID', primary_key=True, serialize=False)),
                ('blobrecs', models.TextField(blank=True, db_column='blobRecs', null=True)),
                ('cetonicos', models.IntegerField(blank=True, null=True)),
                ('ejercicio', models.IntegerField(blank=True, null=True)),
                ('fondoojos', models.IntegerField(blank=True, db_column='fondoOjos', null=True)),
                ('hba1c', models.IntegerField(blank=True, null=True)),
                ('imc', models.IntegerField(blank=True, null=True)),
                ('h1', models.IntegerField(blank=True, null=True)),
                ('h2', models.CharField(blank=True, max_length=45, null=True)),
                ('h3', models.CharField(blank=True, max_length=45, null=True)),
                ('h4', models.CharField(blank=True, max_length=45, null=True)),
                ('h5', models.CharField(blank=True, max_length=45, null=True)),
                ('h6', models.CharField(blank=True, max_length=45, null=True)),
                ('h7', models.CharField(blank=True, max_length=45, null=True)),
                ('h8', models.CharField(blank=True, max_length=45, null=True)),
                ('h9', models.CharField(blank=True, max_length=45, null=True)),
                ('h10', models.CharField(blank=True, max_length=45, null=True)),
                ('h11', models.CharField(blank=True, max_length=45, null=True)),
                ('h12', models.CharField(blank=True, max_length=45, null=True)),
                ('h13', models.CharField(blank=True, max_length=45, null=True)),
                ('h14', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'casos_seguimiento',
            },
        ),
        migrations.CreateModel(
            name='Centro_investigacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'centro_investigacion',
            },
        ),
        migrations.CreateModel(
            name='Centro_medico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'centro_medico',
            },
        ),
        migrations.CreateModel(
            name='DestinoDoc',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=45)),
            ],
            options={
                'db_table': 'destino_doc',
            },
        ),
        migrations.CreateModel(
            name='Dietas',
            fields=[
                ('clave', models.BigAutoField(db_column='CLAVE', primary_key=True, serialize=False)),
                ('date', models.DateTimeField(blank=True, db_column='DATE', null=True)),
                ('iduser', models.BigIntegerField(blank=True, db_column='IDUSER', null=True)),
                ('moment', models.IntegerField(blank=True, db_column='MOMENT', null=True)),
                ('observations', models.CharField(blank=True, db_column='OBSERVATIONS', max_length=255, null=True)),
                ('raciones', models.FloatField(blank=True, db_column='RACIONES', null=True)),
            ],
            options={
                'db_table': 'dietas',
            },
        ),
        migrations.CreateModel(
            name='Documentaciones',
            fields=[
                ('clave', models.BigAutoField(db_column='CLAVE', primary_key=True, serialize=False)),
                ('date', models.DateTimeField(blank=True, db_column='DATE', null=True)),
                ('fichero', models.TextField(blank=True, db_column='FICHERO', null=True)),
                ('filename', models.CharField(blank=True, db_column='FILENAME', max_length=255, null=True)),
                ('filesize', models.BigIntegerField(blank=True, db_column='FILESIZE', null=True)),
                ('iduser', models.BigIntegerField(blank=True, db_column='IDUSER', null=True)),
                ('tipodestino', models.BigIntegerField(blank=True, db_column='TIPODESTINO', null=True)),
                ('description', models.CharField(blank=True, db_column='DESCRIPTION', max_length=255, null=True)),
                ('filetype', models.CharField(blank=True, db_column='FILETYPE', max_length=64, null=True)),
            ],
            options={
                'db_table': 'documentaciones',
            },
        ),
        migrations.CreateModel(
            name='Ejercicios',
            fields=[
                ('clave', models.BigAutoField(db_column='CLAVE', primary_key=True, serialize=False)),
                ('date', models.DateTimeField(blank=True, db_column='DATE', null=True)),
                ('iduser', models.BigIntegerField(blank=True, db_column='IDUSER', null=True)),
                ('level', models.IntegerField(blank=True, db_column='LEVEL', null=True)),
                ('type', models.IntegerField(blank=True, db_column='TYPE', null=True)),
            ],
            options={
                'db_table': 'ejercicios',
            },
        ),
        migrations.CreateModel(
            name='Ficherosexportados',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
                ('fecha', models.DateTimeField(blank=True, db_column='FECHA', null=True)),
                ('filepath', models.CharField(blank=True, db_column='FILEPATH', max_length=255, null=True)),
                ('iduser', models.BigIntegerField(blank=True, db_column='IDUSER', null=True)),
            ],
            options={
                'db_table': 'ficherosexportados',
            },
        ),
        migrations.CreateModel(
            name='GestionpedidosArticulos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30)),
                ('seccion', models.CharField(max_length=30)),
                ('precio', models.IntegerField()),
            ],
            options={
                'db_table': 'gestionpedidos_articulos',
            },
        ),
        migrations.CreateModel(
            name='GestionpedidosClientes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30)),
                ('direccion', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=254)),
                ('telefono', models.CharField(max_length=7)),
            ],
            options={
                'db_table': 'gestionpedidos_clientes',
            },
        ),
        migrations.CreateModel(
            name='GestionpedidosPedidos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField()),
                ('fecha', models.DateField()),
                ('entregado', models.IntegerField()),
            ],
            options={
                'db_table': 'gestionpedidos_pedidos',
            },
        ),
        migrations.CreateModel(
            name='Glucemias',
            fields=[
                ('clave', models.BigAutoField(db_column='CLAVE', primary_key=True, serialize=False)),
                ('date', models.DateTimeField(blank=True, db_column='DATE', null=True)),
                ('iduser', models.BigIntegerField(blank=True, db_column='IDUSER', null=True)),
                ('moment', models.IntegerField(blank=True, db_column='MOMENT', null=True)),
                ('observations', models.CharField(blank=True, db_column='OBSERVATIONS', max_length=255, null=True)),
                ('value', models.FloatField(blank=True, db_column='VALUE', null=True)),
            ],
            options={
                'db_table': 'glucemias',
            },
        ),
        migrations.CreateModel(
            name='Insulinas',
            fields=[
                ('clave', models.BigAutoField(db_column='CLAVE', primary_key=True, serialize=False)),
                ('date', models.DateTimeField(blank=True, db_column='DATE', null=True)),
                ('iduser', models.BigIntegerField(blank=True, db_column='IDUSER', null=True)),
                ('moment', models.IntegerField(blank=True, db_column='MOMENT', null=True)),
                ('type', models.IntegerField(blank=True, db_column='TYPE', null=True)),
                ('value', models.FloatField(blank=True, db_column='VALUE', null=True)),
            ],
            options={
                'db_table': 'insulinas',
            },
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('board_number', models.CharField(max_length=250)),
                ('medical_center', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Centro_medico')),
            ],
            options={
                'db_table': 'medico',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MensajesUsuario',
            fields=[
                ('mensajeid', models.AutoField(primary_key=True, serialize=False)),
                ('fecha', models.DateTimeField(blank=True, null=True)),
                ('nuevo', models.IntegerField(blank=True, null=True)),
                ('recomendacionid', models.IntegerField(blank=True, null=True)),
                ('userid', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mensajes_usuario',
            },
        ),
        migrations.CreateModel(
            name='Modelos',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
                ('modelo', models.CharField(db_column='MODELO', max_length=512)),
                ('fecha', models.DateTimeField(db_column='FECHA')),
                ('idpaciente', models.IntegerField(db_column='IDPACIENTE')),
            ],
            options={
                'db_table': 'modelos',
            },
        ),
        migrations.CreateModel(
            name='Momentos',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=45)),
                ('hourfrom', models.SmallIntegerField(blank=True, db_column='HOURFROM', null=True)),
                ('hourto', models.SmallIntegerField(blank=True, db_column='HOURTO', null=True)),
            ],
            options={
                'db_table': 'momentos',
            },
        ),
        migrations.CreateModel(
            name='NivelEje',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=45)),
            ],
            options={
                'db_table': 'nivel_eje',
            },
        ),
        migrations.CreateModel(
            name='Pesos',
            fields=[
                ('clave', models.BigAutoField(db_column='CLAVE', primary_key=True, serialize=False)),
                ('date', models.DateTimeField(blank=True, db_column='DATE', null=True)),
                ('iduser', models.BigIntegerField(blank=True, db_column='IDUSER', null=True)),
                ('peso', models.FloatField(blank=True, db_column='PESO', null=True)),
            ],
            options={
                'db_table': 'pesos',
            },
        ),
        migrations.CreateModel(
            name='Pruebas',
            fields=[
                ('clave', models.BigAutoField(db_column='CLAVE', primary_key=True, serialize=False)),
                ('date', models.DateTimeField(blank=True, db_column='DATE', null=True)),
                ('fichero', models.TextField(blank=True, db_column='FICHERO', null=True)),
                ('filename', models.CharField(blank=True, db_column='FILENAME', max_length=255, null=True)),
                ('filesize', models.BigIntegerField(blank=True, db_column='FILESIZE', null=True)),
                ('iduser', models.BigIntegerField(blank=True, db_column='IDUSER', null=True)),
                ('type', models.IntegerField(blank=True, db_column='TYPE', null=True)),
                ('filetype', models.CharField(blank=True, db_column='FILETYPE', max_length=64, null=True)),
            ],
            options={
                'db_table': 'pruebas',
            },
        ),
        migrations.CreateModel(
            name='Recomendaciones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asunto', models.CharField(blank=True, max_length=255, null=True)),
                ('seccion', models.CharField(blank=True, max_length=255, null=True)),
                ('texto', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recomendaciones',
            },
        ),
        migrations.CreateModel(
            name='TipoEje',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=45)),
            ],
            options={
                'db_table': 'tipo_eje',
            },
        ),
        migrations.CreateModel(
            name='TipoIns',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=45)),
            ],
            options={
                'db_table': 'tipo_ins',
            },
        ),
        migrations.CreateModel(
            name='TipoPru',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=45)),
            ],
            options={
                'db_table': 'tipo_pru',
            },
        ),
        migrations.CreateModel(
            name='Tratamiento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250)),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'tratamiento',
            },
        ),
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
                ('address', models.CharField(blank=True, db_column='ADDRESS', max_length=255, null=True)),
                ('altacurso', models.IntegerField(blank=True, db_column='ALTACURSO', null=True)),
                ('city', models.CharField(blank=True, db_column='CITY', max_length=255, null=True)),
                ('date', models.DateTimeField(blank=True, db_column='DATE', null=True)),
                ('dni', models.CharField(blank=True, db_column='DNI', max_length=32, null=True)),
                ('email', models.CharField(blank=True, db_column='EMAIL', max_length=255, null=True, unique=True)),
                ('examen', models.BigIntegerField(blank=True, db_column='EXAMEN', null=True)),
                ('fechaevaluacion', models.DateTimeField(blank=True, db_column='FECHAEVALUACION', null=True)),
                ('firmacontrato', models.IntegerField(blank=True, db_column='FIRMACONTRATO', null=True)),
                ('height', models.FloatField(blank=True, db_column='HEIGHT', null=True)),
                ('iddoctor', models.BigIntegerField(blank=True, db_column='IDDOCTOR', null=True)),
                ('ip', models.CharField(blank=True, db_column='IP', max_length=255, null=True)),
                ('login', models.BigIntegerField(blank=True, db_column='LOGIN', null=True)),
                ('moodleid', models.IntegerField(blank=True, db_column='MOODLEID', null=True)),
                ('name', models.CharField(blank=True, db_column='NAME', max_length=64, null=True)),
                ('nivel', models.IntegerField(blank=True, db_column='NIVEL', null=True)),
                ('password', models.CharField(blank=True, db_column='PASSWORD', max_length=32, null=True)),
                ('phone', models.CharField(blank=True, db_column='PHONE', max_length=32, null=True)),
                ('phone2', models.CharField(blank=True, db_column='PHONE2', max_length=32, null=True)),
                ('rolcurso', models.IntegerField(blank=True, db_column='ROLCURSO', null=True)),
                ('sex', models.CharField(blank=True, db_column='SEX', max_length=6, null=True)),
                ('surname1', models.CharField(blank=True, db_column='SURNAME1', max_length=64, null=True)),
                ('surname2', models.CharField(blank=True, db_column='SURNAME2', max_length=64, null=True)),
                ('fechaconsen', models.DateTimeField(blank=True, db_column='FECHACONSEN', null=True)),
                ('hipergluc', models.IntegerField(blank=True, db_column='HIPERGLUC', null=True)),
                ('hipogluc', models.IntegerField(blank=True, db_column='HIPOGLUC', null=True)),
            ],
            options={
                'db_table': 'usuarios',
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('birth_date', models.DateField()),
                ('diabetes_type', models.CharField(choices=[('Tipo 1', 'Diabetes de tipo 1'), ('Tipo 2', 'Diabetes de tipo 2'), ('Otro', 'Diabetes de otro tipo')], max_length=10)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('first_date', models.DateTimeField(blank=True, help_text='Primera fecha con datos del paciente', null=True)),
                ('last_date', models.DateTimeField(blank=True, help_text='Ultima fecha con datos del paciente', null=True)),
                ('doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Medico')),
                ('treatment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Tratamiento')),
            ],
            options={
                'db_table': 'paciente',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Investigador',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('Investigator_type', models.CharField(choices=[('Research', 'Investigador de busqueda'), ('Analisis', 'Investigador de analisis'), ('Otro', 'otro tipo de investigador')], max_length=10)),
                ('investigation_center', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Centro_investigacion')),
            ],
            options={
                'db_table': 'investigador',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Suenio_resumen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('sleep_main_sleep', models.BooleanField()),
                ('sleep_efficiency', models.FloatField(max_length=250)),
                ('sleep_duration', models.FloatField(max_length=250)),
                ('sleep_minutes_asleep', models.FloatField(max_length=250)),
                ('sleep_minutes_light', models.FloatField(max_length=250)),
                ('sleep_minutes_deep', models.FloatField(max_length=250)),
                ('sleep_minutes_rem', models.FloatField(max_length=250)),
                ('sleep_minutes_awake', models.FloatField(max_length=250)),
                ('sleep_minutes_in_bed', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'suenio_resumen',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Suenio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('sleep_state', models.CharField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'suenio',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Siesta_resumen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('nap_main_sleep', models.BooleanField()),
                ('nap_efficiency', models.FloatField(max_length=250)),
                ('nap_duration', models.FloatField(max_length=250)),
                ('nap_minutes_asleep', models.FloatField(max_length=250)),
                ('nap_minutes_light', models.FloatField(max_length=250)),
                ('nap_minutes_deep', models.FloatField(max_length=250)),
                ('nap_minutes_rem', models.FloatField(max_length=250)),
                ('nap_minutes_awake', models.FloatField(max_length=250)),
                ('nap_minutes_in_bed', models.FloatField(max_length=250)),
                ('nap_minutes_restless', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'siesta_resumen',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Siesta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('nap_state', models.CharField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'siesta',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Ritmo_cardiaco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('heart_rate', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'ritmo_cardiaco',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Peso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('peso', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'peso',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Pasos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('steps', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'pasos',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Insulina_rapida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('insulina_rapida_U', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'insulina_rapida',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Insulina_lenta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('insulina_lenta_U', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'insulina_lenta',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Hito_roche',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('hito_roche', models.CharField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'hito_roche',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Glucosa_sangre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('glucosa_sangre_mg_dL', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'glucosa_sangre',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Glucosa_medtronic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('glucosa_medtronic_mg_dL', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'glucosa_medtronic',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Glucosa_freestyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('glucosa_freestyle_mg_dL', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'glucosa_freestyle',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Evento_insulina_rapida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('evento_insulina_rapida', models.CharField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'evento_insulina_rapida',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Evento_insulina_lenta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('evento_insulina_lenta', models.CharField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'evento_insulina_lenta',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Evento_carbohidratos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('evento_carbohidratos', models.CharField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'evento_carbohidratos',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Cetonas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('cetonas_mmol_L', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'cetonas',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Carb_ratio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('carb_ratio_U_EX', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'carb_ratio',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Carb_input',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('carb_input_EX', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'carb_input',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Calorias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('calories', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'calorias',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Bolus_volume_delivered',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('bolus_volume_delivered_U', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'bolus_volume_delivered',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Bolus_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('bolus_type', models.CharField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'bolus_type',
                'unique_together': {('id_user', 'time')},
            },
        ),
        migrations.CreateModel(
            name='Basal_rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('basal_rate_U_h', models.FloatField(max_length=250)),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestionPacientes.Paciente')),
            ],
            options={
                'db_table': 'basal_rate',
                'unique_together': {('id_user', 'time')},
            },
        ),
    ]
